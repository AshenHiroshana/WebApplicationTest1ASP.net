// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationTest1.DataAccess;

#nullable disable

namespace WebApplicationTest1.DataAccess.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20220424081902_AuthorEntityAndData")]
    partial class AuthorEntityAndData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplicationTest1.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Ashen Hiroshana"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Shalika Hiroshana"
                        });
                });

            modelBuilder.Entity("WebApplicationTest1.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Created = new DateTime(2022, 4, 24, 13, 49, 1, 714, DateTimeKind.Local).AddTicks(1458),
                            Description = "A aa",
                            DueDate = new DateTime(2022, 4, 29, 13, 49, 1, 714, DateTimeKind.Local).AddTicks(1468),
                            Status = 0,
                            Title = "A"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Created = new DateTime(2022, 4, 24, 13, 49, 1, 714, DateTimeKind.Local).AddTicks(1479),
                            Description = "A aa",
                            DueDate = new DateTime(2022, 4, 29, 13, 49, 1, 714, DateTimeKind.Local).AddTicks(1480),
                            Status = 0,
                            Title = "B"
                        });
                });

            modelBuilder.Entity("WebApplicationTest1.Models.Todo", b =>
                {
                    b.HasOne("WebApplicationTest1.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
